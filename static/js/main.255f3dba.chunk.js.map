{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","large_cover_image","setTimeout","Component","Detail","props","history","undefined","location","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"wUAwCeA,MAlCf,YAAuD,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC1C,OACI,qBAAKC,UAAU,QAAf,SAGI,eAAC,IAAD,CAAMC,GAAI,CAACC,SAAU,gBAAiBC,MAAO,CAACR,OAAMC,QAAOE,SAAQC,SAAOF,YAA1E,UAEI,qBAAKO,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA8BJ,IAC9B,mBAAGI,UAAU,aAAb,SAA4BL,IAC5B,6BACMI,EAAOO,KAAI,SAACC,EAAMC,GAChB,OAAO,oBAAIR,UAAU,cAAd,SAA0CO,GAATC,QAKhD,oBAAGR,UAAU,gBAAb,UAA+BH,EAAQY,MAAM,EAAE,KAA/C,kBCmCLC,G,kNAtDbP,MAAQ,CACNQ,WAAW,EACXC,OAAQ,I,EAuCVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAGZ,EAAKM,SAAU,CAACN,OAAQA,EAAQD,WAAW,IANjC,2C,4CApCZ,WAAU,IAAD,EACuBQ,KAAKhB,MAA3BQ,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,0BAASZ,UAAU,YAAnB,UACE,4CACEW,EACA,qBAAKX,UAAU,SAAf,SACE,qBAAIA,UAAU,SAAd,UACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,0CAIA,qBAAKA,UAAU,SAAf,SACIY,EAAON,KAAI,SAAAc,GAAK,OAChB,cAAC,EAAD,CAEEC,GAAMD,EAAMC,GACZ1B,KAAQyB,EAAMzB,KACdC,MAASwB,EAAMxB,MACfC,QAAWuB,EAAMvB,QACjBC,OAAUsB,EAAME,kBAChBvB,OAAUqB,EAAMrB,QANTqB,EAAMC,c,+BAwB7B,WACEE,WAAWJ,KAAKN,UAAU,S,GApDXW,cC+BJC,G,6KA/BX,WAAqB,IAAD,EACaN,KAAKO,MAA1BC,EADQ,EACRA,aACSC,IAFD,EACAC,SACP1B,OAAsBwB,EAAQG,KAAK,O,oBAKhD,WAAU,IACED,EAAaV,KAAKO,MAAlBG,SAGR,OACQ,qBAAK7B,UAAU,aAAf,SAA8B6B,EAAS1B,MAC5B,0BAASH,UAAU,MAAnB,UACK,qBAAKA,UAAU,UAAf,SACI,qBAAKI,IAAMyB,EAAS1B,MAAML,OAASO,IAAMwB,EAAS1B,MAAMP,UAE5D,sBAAKI,UAAU,WAAf,UACI,6BAAM6B,EAAS1B,MAAMP,QACrB,oBAAGI,UAAU,WAAb,UAA0B6B,EAAS1B,MAAMR,KAAzC,OAAqD,+BAAQkC,EAAS1B,MAAMJ,OAAOO,KAAI,SAACC,EAAMC,GAC1F,OAAO,+BAAoBD,GAATC,WAEtB,8CACA,mBAAGR,UAAU,OAAb,SAAsB6B,EAAS1B,MAAMN,gBAGpD,W,GA3BA2B,cCcNO,MAVf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWxB,IAExC,cAAC,IAAD,CAAOsB,KAAK,gBAAgBE,UAAWT,QCR7CU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.255f3dba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './Movie.css';\r\n// 최종1. 영화상세페이지 Link컴포넌트 사용을 위한 도구 import\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Movie({year, title, summary, poster, genres}){\r\n    return(\r\n        <div className=\"movie\">\r\n            {/* 최종2. 객체를 전달 : <Link to={{pathname: '/URL', state: {'route props에 보내줄 데이터'},}} */}\r\n            {/* 영화상세페이지 사용을 위한 Link컴포넌트 사용 | state는 route props에 보내줄 데이터 */}\r\n            <Link to={{pathname: \"/movie-detail\", state: {year, title, poster, genres,summary},}}>\r\n            \r\n                <img src={poster} alt={title} title={title} />\r\n                <div className=\"movie_data\">\r\n                    <h2 className=\"movie_title\">{ title }</h2>\r\n                    <p className=\"movie_year\">{ year }</p>\r\n                    <ul>\r\n                        { genres.map((genre,index)=>{\r\n                            return <li className=\"movie_genre\" key={index}>{ genre }</li>\r\n                        }) }\r\n                    </ul>\r\n                    {/* <p className=\"movie_rating\">{ rating }/10</p> */}\r\n                    {/* 최종. 시놉시스 180자로 제한 = slice(배열시작인덱스,배열끝인덱스앞까지) */}\r\n                    <p className=\"movie_summary\">{ summary.slice(0,180) }...</p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\n// propTypes로 데이터 유효성 체크하기\r\nMovie.propTypes = {\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    // rating: PropTypes.number.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n}\r\nexport default Movie;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\nclass Home extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state\r\n    return (\r\n      <section className=\"container\">\r\n        <h1>Moive List</h1>\r\n        { isLoading ? (\r\n          <div className=\"loader\">\r\n            <h1 className=\"loader\">\r\n            <span>L</span>\r\n            <span>O</span>\r\n            <span>A</span>\r\n            <span>D</span>\r\n            <span>I</span>\r\n            <span>N</span>\r\n            <span>G</span>\r\n            </h1>\r\n          </div>\r\n          ) : (\r\n            <div className=\"movies\">\r\n              { movies.map(movie => (\r\n                <Movie \r\n                  key = {movie.id}\r\n                  id = {movie.id}\r\n                  year = {movie.year}\r\n                  title = {movie.title}\r\n                  summary = {movie.summary}\r\n                  poster = {movie.large_cover_image}\r\n                  genres = {movie.genres}\r\n                />\r\n              )) }\r\n            </div>\r\n            ) }\r\n      </section>\r\n    );\r\n  };\r\n\r\n  getMovies = async () =>{\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\r\n    this.setState( {movies: movies, isLoading: false} );\r\n  }\r\n\r\n  componentDidMount(){\r\n    setTimeout(this.getMovies,3000);\r\n  }\r\n}\r\nexport default Home;","import React, { Component } from 'react';\r\nimport \"./Detail.css\";\r\n\r\nclass Detail extends Component {\r\n    componentDidMount() {\r\n        const { history,location } = this.props;\r\n        location.state===undefined && (history.push('/'));\r\n    }\r\n    // (브라우저주소)localhost:3000/#/movie-detail로 접속시 에러남\r\n    // 이유 : render()함수 실행 후 componentDidMount()가 실행되기 때문에 render()값을 못 받아옴\r\n    // 해결방법 : render()함수에도 componentDidMount()에 작성한 리다이렉트 코드 추가해 주면 됨\r\n    render() {\r\n        const { location } = this.props;\r\n\r\n        // return(<>{location.state?('aaa'):('bbb')}</>);\r\n        return (\r\n                <div className=\"detail_box\">{ location.state ? (\r\n                           <section className=\"box\">\r\n                                <div className=\"img_box\">\r\n                                    <img src={ location.state.poster } alt={ location.state.title }/>\r\n                                </div>\r\n                                <div className=\"text_box\">\r\n                                    <h1>{ location.state.title }</h1>\r\n                                    <p className=\"sub_text\">{ location.state.year }&nbsp;<span>{ location.state.genres.map((genre,index)=>{\r\n                                        return <span key={index}>{ genre }</span>\r\n                                        }) }</span></p>\r\n                                    <strong>Summary </strong>\r\n                                    <p className=\"text\">{ location.state.summary }</p>\r\n                                </div>\r\n                           </section>\r\n                ) : (null)}\r\n                </div>\r\n        );\r\n    }\r\n}\r\nexport default Detail;","import React from \"react\";\nimport './App.css';\nimport { HashRouter,  Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\n// 최종1. Detail 컴포넌트 추가\nimport Detail from \"./routes/Detail\";\n\nfunction App(){\n  return (\n    <HashRouter>\n      <Route path=\"/\" exact={true} component={Home} />\n      {/* 최종2. 링크될 컴포넌트 라우터 추가 */}\n      <Route path=\"/movie-detail\" component={Detail}/>\n      {/* 최종3. Movie 컴포넌트에 Link to로 경로와 넘길 props값 지정해줌 */}\n    </HashRouter>\n  );\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}